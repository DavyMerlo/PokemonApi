// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pokemon {
  id        Int            @id @default(autoincrement())
  name      String         @unique
  details   PokemonDetails @relation(fields: [detailsId], references: [id])
  detailsId Int
  teams     PokemonTeam[]
}

model PokemonDetails {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  height    Float
  weight    Float
  stats     Stat[]
  abilities Ability[]
  moves     Move[]
  order     Int
  species   String
  pokemons  Pokemon[]
  types     Type[]
  sprite    Sprite?
}

model Sprite {
  id               Int             @id @default(autoincrement())
  frontDefault     String?
  frontFemale      String?
  frontShiny       String?
  frontShinyFemale String?
  backDefault      String?
  backFemale       String?
  backShiny        String?
  backShinyFemale  String?
  pokemonDetail    PokemonDetails? @relation(fields: [pokemonDetailsId], references: [id])
  pokemonDetailsId Int?            @unique
}

model Type {
  id               Int            @id @default(autoincrement())
  name             String
  slot             Int
  pokemonDetail    PokemonDetails @relation(fields: [pokemonDetailsId], references: [id])
  pokemonDetailsId Int
}

model Move {
  id                  Int                  @id @default(autoincrement())
  move                String
  pokemonDetail       PokemonDetails       @relation(fields: [pokemonDetailsId], references: [id])
  pokemonDetailsId    Int
  versionGroupDetails VersionGroupDetail[]
}

model Stat {
  id               Int            @id @default(autoincrement())
  statName         String
  baseStat         Int
  effort           Int
  pokemondetails   PokemonDetails @relation(fields: [pokemonDetailsId], references: [id])
  pokemonDetailsId Int
}

model Ability {
  id               Int            @id @default(autoincrement())
  abilityName      String
  isHidden         Boolean
  slot             Int
  pokemonDetails   PokemonDetails @relation(fields: [pokemonDetailsId], references: [id])
  pokemonDetailsId Int
}

model VersionGroupDetail {
  id              Int    @id @default(autoincrement())
  moveLearnMethod String
  versionGroup    String
  levelLearnedAt  Int
  move            Move   @relation(fields: [moveId], references: [id])
  moveId          Int
}

model Team {
  id              Int           @id @default(autoincrement())
  name            String
  users           User[]
  pokemons        PokemonTeam[]
  teamMemberships TeamUser[]
}

model User {
  id              Int        @id @default(autoincrement())
  name            String
  email           String     @unique
  password        String
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  teams           Team[]
  teamMemberships TeamUser[]
}

model PokemonTeam {
  id        Int     @id @default(autoincrement())
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id])
  pokemonId Int
  team      Team    @relation(fields: [teamId], references: [id])
  teamId    Int

  @@unique([pokemonId, teamId])
}

model TeamUser {
  id     Int  @id @default(autoincrement())
  team   Team @relation(fields: [teamId], references: [id])
  teamId Int
  user   User @relation(fields: [userId], references: [id])
  userId Int
}
